name: Version Update and Upload Python Package

#Upload to pypi when tagged release.
#Requirements:
#・Add this file to "trusted publishers" in pypi and test pypi.
#・Version.txt exists in root



on:
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  update-version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
          ref: main
          fetch-depth: 0

    - name: Extract version from tag
      id: extract_version
      run: echo "version=${GITHUB_REF##refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Get auto_diffusers version
      id: get_auto_diffusers_version
      run: |
        pip install auto_diffusers
        auto_diffusers_version=$(pip show auto_diffusers | grep Version | awk '{print $2}')  
        echo "auto_diffusers_version=$auto_diffusers_version" >> $GITHUB_OUTPUT

    - name: Determine final version
      id: determine_version
      run: |
        version=${{ steps.extract_version.outputs.version }}
        auto_diffusers_version=${{ steps.get_auto_diffusers_version.outputs.auto_diffusers_version }}
        if [[ "$auto_diffusers_version" == *"$version"* ]]; then
          dev_version=0
          while [[ "$auto_diffusers_version" == *"$version.dev$dev_version"* ]]; do
            dev_version=$((dev_version + 1))
          done
          version="$version.dev$dev_version"
        fi
        echo "final_version=$version" >> $GITHUB_OUTPUT

    - name: Set version as environment variable
      run: echo "VERSION=${{ steps.determine_version.outputs.final_version }}" >> $GITHUB_ENV

    - name: Update VERSION file
      run: echo "${{ steps.determine_version.outputs.final_version }}" > Version.txt

    - name: Commit
      run: |
        version=$(cat version.txt)
        echo "Version1: $version"
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git pull origin main
        git add Version.txt
        git commit -m "Update Version.txt file to ${{ steps.determine_version.outputs.final_version }}"
        git push origin main
        version_two=$(cat version.txt)
        echo "Version2: $version_two"
